Index: templates/Product/item_info.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\n{% load embed_video_tags %}\n{% block content %}\n    {#    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/iteminfo.css\">#}\n    {#    <script type=\"text/javascript\" src=\"/static/js/cart.js\"></script>#}\n    {#    <script src=\"https://code.jquery.com/jquery-3.6.0.js\"#}\n    {#            integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\" crossorigin=\"anonymous\"></script>#}\n\n     <style>\n        .newtextarea{\n            border:0;\n            border-radius:5px;\n            background-color:rgba(241,241,241,.98);\n            width: 1000px;\n            height: 200px;\n            padding: 10px;\n            resize: none;\n            margin-left: 50px;\n        }\n\n        .post-button {\n            cursor: pointer;\n            border-radius: 5px 5px 5px 5px;\n            width: 170px;\n            height: 47px;\n            background-color: #27b069;\n            font-size: 13px;\n            border: none;\n            color: #ffffff;\n            margin-top: 20px;\n            box-shadow: 0 4px 4px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 19%);\n            margin-right: 70px;\n            float: right;\n        }\n\n\n        .reply-button {\n            cursor: pointer;\n            border-radius: 5px 5px 5px 5px;\n            width: 100px;\n            height: 30px;\n            background-color: #27b069;\n            font-size: 13px;\n            border: none;\n            color: #ffffff;\n            margin-top: 40px;\n            box-shadow: 0 4px 4px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 19%);\n            {#margin-right: 30px;#}\n            float: right;\n        }\n\n        .comment-area{\n            {#border: 1px solid #d2d2d2;#}\n            border-radius: 5px 5px 5px 5px;\n\n        }\n\n        .small-comment-area{\n            border-radius: 5px 5px 5px 5px;\n            background-color:rgba(241,241,241,.5);\n            box-shadow: 0 4px 4px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 19%);\n        }\n    </style>\n\n\n\n\n    <div class=\"iteminfo_content_top\">\n        <div class=\"iteminfo_pic\">\n            <img height=\"100%\" width=\"100%\" src=\"{{ product.image.url }}\"/>\n        </div>\n\n        <div class=\"iteminfo_maininfo\">\n            <div class=\"iteminfo_maininfo_text title\" id=\"nm{{ product.id }}\">\n                {{ product.title }}\n            </div>\n\n            <div class=\"iteminfo_maininfo_text score\">Score:<p_yellow>{{ score }}</p_yellow>\n            </div>\n\n            <div class=\"iteminfo_maininfo_text rating\">\n                Rating : {{ product.rating }}\n            </div>\n\n            <div class=\"iteminfo_maininfo_text format\">\n                Format type : {{ product.format }}\n            </div>\n\n            <div class=\"iteminfo_maininfo_text category\">\n                Category : {{ product.category }}\n            </div>\n\n            <div class=\"iteminfo_maininfo_text publishdate\">\n                Publish date : {{ product.publishDate }}\n            </div>\n\n\n            <div class=\"iteminfo_maininfo_text price\">\n                Price :\n                {% if product.discount_price %}\n                    <p_price>${{ product.discount_price|floatformat:2 }}</p_price>\n\n                    <p_price2> was ${{ product.price|floatformat:2 }}</p_price2>\n                {% else %}\n                    <p_price> ${{ product.price|floatformat:2 }}</p_price>\n                {% endif %}\n            </div>\n\n            <div class=\"iteminfo_maininfo_text stock\">\n                Stock : {{ product.stock }}\n            </div>\n\n            <div class=\"iteminfo_maininfo_text available\">\n                Available : {{ product.availability }}\n            </div>\n\n            <div class=\"iteminfo_maininfo_text buy\">\n                <input>\n                <button data-product=\"{{ product.id }}\" data-action=\"add\" class=\"iteminfo_buybtn atc update-cart\">\n                    Add to Cart\n                </button>\n            </div>\n\n            <div class=\"iteminfo_maininfo_text bottom\">\n                <img src=\"/static/payment.png\">\n            </div>\n\n        </div>\n    </div>\n\n    <div class=\"iteminfo_content_bottom\">\n        <div class=\"iteminfo_description\">\n            <p_description> Description\n                <hr/>\n            </p_description>\n            {{ product.description|safe }}\n        </div>\n\n        <div class=\"iteminfo_description\">\n            {% if product.trailer %}\n                <p_description>Trailer\n                    <hr/>\n                </p_description>\n                <span style=\"display: flex; justify-content: center\"> {% video product.trailer '1000x600' %}</span>\n            {% endif %}\n        </div>\n\n        <div class=\"iteminfo_description\">\n            <p_description>Details\n                <hr/>\n            </p_description>\n            {{ product.details|safe }}\n        </div>\n\n        <div class=\"iteminfo_qa\">\n            <p_description>Q&A\n                <hr/>\n            </p_description>\n            {% if user.is_authenticated %}\n                <div>\n                    <form action=\"{% url \"Comment:post_comment\" product.id %}\" method=\"post\">\n                        {% csrf_token %}\n                        <div class=\"form-group\">\n                            <div class=\"normal\">\n                                <p1>Post a Comment:</p1>\n                            </div>\n                            <textarea  type=\"text\" class=\"newtextarea\" id=\"body\" name=\"body\"\n                                      placeholder=\"Please enter a comment\"></textarea>\n                        </div>\n\n                        <button class=\"post-button\" type=\"submit\" >Post</button>\n                    </form>\n                </div>\n\n                <br>\n            {% else %}\n                <br>\n                <h5 class=\"row justify-content-center\">\n                    Please <a href=\"{% url 'User:login' %}\"> login </a> to reply.\n                </h5>\n                <br>\n            {% endif %}\n\n            <div class=\"all_comment\">\n                {% load mptt_tags %}\n                <h4>Total comments: {{ comments.count }}</h4>\n                <div class=\"comment-area\">\n                    {% recursetree comments %}\n                        {% with comment=node %}\n                            <div class=\"{% if comment.reply_to %} offset-1 col-11 {% else %} col-12 {% endif %}\">\n{#                                <hr/>#}\n                            <div class=\"small-comment-area\">\n                                <p>\n                                    <strong style=\"color: #e47f3a;font-size: 20px\">\n                                        {{ comment.user }}\n                                    </strong>\n\n                                    {% if comment.reply_to %}\n                                        <i class=\"far fa-arrow-alt-circle-right\"\n                                           style=\"color: cornflowerblue;\"\n                                        ></i>\n                                        <strong style=\"color: cornflowerblue;font-size: 20px\">\n                                            <span style=\"color: black\"\n                                                  class=\"arrow-outer\">  reply to</span> {{ comment.reply_to }}\n                                        </strong>\n                                    {% endif %}\n\n                                </p>\n                                <div>{{ comment.body|safe }}</div>\n\n                                <div>\n                                    <span style=\"color: gray\">\n                                    {{ comment.created|date:\"Y-m-d H:i:s\" }}\n                                    </span>\n\n                                    {% if user.is_authenticated %}\n{#                                        div class=\"reply-button-container\" style=\"display: flex; flex-direction: row-reverse;line-height: 0\">#}\n                                        <button type=\"button\"\n                                                class=\"reply-button\"\n                                                onclick=\"load_modal({{ product.id }}, {{ comment.id }})\">Reply\n                                        </button>\n{#                                        </div>#}\n                                    {% else %}\n                                        <a class=\"reply-button\"\n                                           href=\"{% url 'User:login' %}\">\n                                            Reply\n                                        </a>\n                                    {% endif %}\n                                </div>\n                            </div>\n\n\n                                <div class=\"modal fade\"\n                                     id=\"comment_{{ comment.id }}\"\n                                     tabindex=\"-1\"\n                                     role=\"dialog\"\n                                     aria-labelledby=\"CommentModalCenter\"\n                                     aria-hidden=\"true\">\n                                    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n                                        <div class=\"modal-content\" style=\"height: 80px\">\n{#                                            <div class=\"modal-header\">#}\n{#                                                <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">Replying#}\n{#                                                    to {{ comment.user }}：</h5>#}\n{#                                            </div>#}\n                                            <div class=\"modal-body\" id=\"modal_body_{{ comment.id }}\"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {% if not comment.is_leaf_node %}\n                                    <div class=\"children\">\n                                        {{ children }}\n                                    </div>\n                                {% endif %}\n                            </div>\n                        {% endwith %}\n                    {% endrecursetree %}\n                </div>\n\n\n                <script>\n\n                    function load_modal(product_id, comment_id) {\n                        let modal_body = '#modal_body_' + comment_id;\n                        let modal_id = '#comment_' + comment_id;\n\n\n                        if ($(modal_body).children().length === 0) {\n                            let content = '<iframe src=\"/Comment/post_comment/' + product_id + '/' + comment_id + '\" frameborder=\"0\" style=\"width: 800px; height: 70px;margin-top: 10px\"></iframe>';\n                            $(modal_body).append(content);\n                        }\n                        ;\n                        $(modal_id).modal('show');\n                    }\n                </script>\n            </div>\n\n\n        </div>\n    </div>\n\n\n\n{% endblock content %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Product/item_info.html b/templates/Product/item_info.html
--- a/templates/Product/item_info.html	(revision 48e446c016bc3042def3f7c2a7174566cd4bf5e2)
+++ b/templates/Product/item_info.html	(date 1636011977800)
@@ -75,8 +75,7 @@
                 {{ product.title }}
             </div>
 
-            <div class="iteminfo_maininfo_text score">Score:<p_yellow>{{ score }}</p_yellow>
-            </div>
+            <div class="iteminfo_maininfo_text score">Score:<p_yellow>{{ score }}</p_yellow></div>
 
             <div class="iteminfo_maininfo_text rating">
                 Rating : {{ product.rating }}
@@ -106,16 +105,16 @@
                 {% endif %}
             </div>
 
-            <div class="iteminfo_maininfo_text stock">
-                Stock : {{ product.stock }}
-            </div>
+{#            <div class="iteminfo_maininfo_text stock">#}
+{#                Stock : {{ product.stock }}#}
+{#            </div>#}
 
             <div class="iteminfo_maininfo_text available">
                 Available : {{ product.availability }}
             </div>
 
             <div class="iteminfo_maininfo_text buy">
-                <input>
+{#                <input>#}
                 <button data-product="{{ product.id }}" data-action="add" class="iteminfo_buybtn atc update-cart">
                     Add to Cart
                 </button>
Index: Product/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\nfrom Product.models import Category, Product, Rating, Format, Availability, Score, Order, OrderItem, ShippingAddress\nfrom django.utils.safestring import mark_safe\nfrom embed_video.admin import AdminVideoMixin\n\nadmin.site.site_header = \"Aoligei E-Commerce Administration\"\nadmin.site.site_title = \"Aoligei E-Commerce Administration\"\nadmin.site.index_title = \"Aoligei E-Commerce Administration\"\n\n\nclass ProductAdmin(AdminVideoMixin, admin.ModelAdmin):\n    list_display = (\n        'title', 'image_data', 'publishDate', 'category', 'format', 'rating', 'price_dollar', 'availability',\n        'updated_time')\n    list_per_page = 10\n    search_fields = ['title', 'category__title', 'format__title', 'rating__title', 'availability__title',\n                     'price', 'discount_price']\n\n    def price_dollar(self, obj):\n        if obj.discount_price:\n            return mark_safe(\"$\" + str(obj.discount_price))\n        else:\n            return mark_safe(\"$\" + str(obj.price))\n\n    def image_data(self, obj):\n        return mark_safe(u'<img src=\"%s\" width=\"100px\" />' % obj.image.url)\n\n    image_data.short_description = u'image desc'\n    price_dollar.short_description = u'price'\n\n\nadmin.site.register(Product, ProductAdmin)\n\n\nclass CategoryAdmin(admin.ModelAdmin):\n    list_display = ('Categories', 'Product_Count')\n    search_fields = ['title']\n    list_per_page = 20\n\n    def Categories(self, obj):\n        return mark_safe(str(obj.title))\n\n    def Product_Count(self, obj):\n        return mark_safe(str(obj.total_items))\n\n\nadmin.site.register(Category, CategoryAdmin)\n\n\nclass RatingAdmin(admin.ModelAdmin):\n    list_display = ('Rating', 'Product_Count')\n    search_fields = ['title']\n    list_per_page = 20\n\n    def Rating(self, obj):\n        return mark_safe(str(obj.title))\n\n    def Product_Count(self, obj):\n        return mark_safe(str(obj.total_items))\n\n\nadmin.site.register(Rating, RatingAdmin)\n\n\nclass FormatAdmin(admin.ModelAdmin):\n    list_display = ('Format', 'Product_Count')\n    search_fields = ['title']\n    list_per_page = 20\n\n    def Format(self, obj):\n        return mark_safe(str(obj.title))\n\n    def Product_Count(self, obj):\n        return mark_safe(str(obj.total_items))\n\n\nadmin.site.register(Format, FormatAdmin)\n\n\nclass AvailabilityAdmin(admin.ModelAdmin):\n    list_display = ('Availability', 'Product_Count')\n    search_fields = ['title']\n    list_per_page = 20\n\n    def Availability(self, obj):\n        return mark_safe(str(obj.title))\n\n    def Product_Count(self, obj):\n        return mark_safe(str(obj.total_items))\n\n\nadmin.site.register(Availability, AvailabilityAdmin)\n\n\nclass ScoreAdmin(admin.ModelAdmin):\n    list_display = (\n        'product_cover', 'product_title', 'score_mark', 'user', 'created_time'\n    )\n    list_per_page = 10\n\n    def product_title(self, obj):\n        title = obj.product.title\n        return mark_safe(str(title))\n\n    def product_cover(self, obj):\n        res = obj.product.image.url\n        # return mark_safe(str(res))\n        return mark_safe(u'<img src=\"%s\" width=\"100px\" />' % res)\n\n    def score_mark(self, obj):\n        temp_score = float(obj.score)\n        if temp_score <= 0.5:\n            temp_score = \"\" + str(temp_score)\n        elif temp_score <= 1.0:\n            temp_score = \"⭐ \" + str(temp_score)\n        elif temp_score <= 1.5:\n            temp_score = \"⭐ \" + str(temp_score)\n        elif temp_score <= 2.0:\n            temp_score = \"⭐⭐ \" + str(temp_score)\n        elif temp_score <= 2.5:\n            temp_score = \"⭐⭐ \" + str(temp_score)\n        elif temp_score <= 3.0:\n            temp_score = \"⭐⭐⭐ \" + str(temp_score)\n        elif temp_score <= 3.5:\n            temp_score = \"⭐⭐⭐ \" + str(temp_score)\n        elif temp_score <= 4.0:\n            temp_score = \"⭐⭐⭐⭐ \" + str(temp_score)\n        elif temp_score <= 4.5:\n            temp_score = \"⭐⭐⭐⭐ \" + str(temp_score)\n        else:\n            temp_score = \"⭐⭐⭐⭐⭐ \" + str(temp_score)\n        return mark_safe(temp_score)\n\n\nadmin.site.register(Score,ScoreAdmin)\n\n\nclass OrderAdmin(admin.ModelAdmin):\n    list_display = (\n        'transaction_Id', 'total_quantity', 'total_price', 'customer', 'complete', 'date_ordered',\n    )\n\n    # exclude = ['transaction_id', 'customer', 'complete',]\n\n    # readonly_fields = ['transaction_id', 'total_quantity', 'total_price', 'customer', 'complete', 'date_ordered',]\n    list_per_page = 8\n\n    def transaction_Id(self, obj):\n        if obj.transaction_id != None and obj.transaction_id != 'NULL':\n            return mark_safe(obj.transaction_id)\n        else:\n            obj.delete()\n\n    def total_quantity(self, obj):\n        if obj:\n            return mark_safe(str(obj.get_cart_items))\n\n    def total_price(self, obj):\n        if obj:\n            return mark_safe(str(obj.get_cart_total))\n\n    search_fields = ['transaction_id', 'complete', 'customer__username', ]\n\n\nadmin.site.register(Order, OrderAdmin)\n\n\nclass OrderItemAdmin(admin.ModelAdmin):\n    list_display = (\n        'transaction_id', 'product_title', 'product_cover', 'price', 'quantity', 'total', 'customer', 'completed',\n        'date_added',\n    )\n    list_per_page = 8\n\n    search_fields = ['order__transaction_id', 'product__title', 'product__price', 'product__discount_price', 'quantity',\n                     'order__complete', 'order__customer__username']\n\n    # readonly_fields = ['transaction_id', 'product_title', 'product_cover', 'price', 'quantity', 'total', 'customer',\n    #                    'completed',\n    #                    'date_added', ]\n\n    def product_title(self, obj):\n        if obj.product:\n            return mark_safe(str(obj.product.title))\n\n    def product_cover(self, obj):\n        if obj.product:\n            return mark_safe(u'<img src=\"%s\" width=\"100px\" />' % (obj.product.image.url))\n\n    def price(self, obj):\n        if obj.product.discount_price:\n            return mark_safe(\"$\" + str(obj.product.discount_price))\n        elif obj.product.price:\n            return mark_safe(\"$\" + str(obj.product.price))\n\n    def transaction_id(self, obj):\n        if obj.order:\n            return mark_safe(obj.order.transaction_id)\n        else:\n            obj.delete()\n\n    def customer(self, obj):\n        if obj.order:\n            return mark_safe(str(obj.order.customer))\n\n    def total(self, obj):\n        if obj:\n            total = obj.get_total\n            return mark_safe(str(total))\n\n    def completed(self, obj):\n        if obj.order:\n            return mark_safe(obj.order.complete)\n\n\nadmin.site.register(OrderItem, OrderItemAdmin)\n\n\nclass ShippingAddressAdmin(admin.ModelAdmin):\n    list_display = ['customer', 'transaction_Id', 'address', 'city', 'state', 'country', 'zipcode', 'date_added']\n    search_fields = ['customer__username', 'order__transaction_id', 'address', 'city', 'state', 'country', 'zipcode',\n                     'date_added']\n\n    def transaction_Id(self, obj):\n        if obj.order:\n            return mark_safe(obj.order.transaction_id)\n        else:\n            obj.delete()\n\n\nadmin.site.register(ShippingAddress, ShippingAddressAdmin)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Product/admin.py b/Product/admin.py
--- a/Product/admin.py	(revision 48e446c016bc3042def3f7c2a7174566cd4bf5e2)
+++ b/Product/admin.py	(date 1636017530721)
@@ -96,6 +96,7 @@
     list_display = (
         'product_cover', 'product_title', 'score_mark', 'user', 'created_time'
     )
+    search_fields = ['score', 'user__username', 'product__title']
     list_per_page = 10
 
     def product_title(self, obj):
@@ -132,18 +133,18 @@
         return mark_safe(temp_score)
 
 
-admin.site.register(Score,ScoreAdmin)
+admin.site.register(Score, ScoreAdmin)
 
 
 class OrderAdmin(admin.ModelAdmin):
     list_display = (
         'transaction_Id', 'total_quantity', 'total_price', 'customer', 'complete', 'date_ordered',
     )
+    list_per_page = 15
 
-    # exclude = ['transaction_id', 'customer', 'complete',]
+    exclude = ['transaction_id', 'customer', 'complete', ]
 
-    # readonly_fields = ['transaction_id', 'total_quantity', 'total_price', 'customer', 'complete', 'date_ordered',]
-    list_per_page = 8
+    readonly_fields = ['transaction_Id', 'total_quantity', 'total_price', 'customer', 'complete', 'date_ordered', ]
 
     def transaction_Id(self, obj):
         if obj.transaction_id != None and obj.transaction_id != 'NULL':
@@ -157,7 +158,7 @@
 
     def total_price(self, obj):
         if obj:
-            return mark_safe(str(obj.get_cart_total))
+            return mark_safe("$" + str(obj.get_cart_total))
 
     search_fields = ['transaction_id', 'complete', 'customer__username', ]
 
@@ -175,9 +176,11 @@
     search_fields = ['order__transaction_id', 'product__title', 'product__price', 'product__discount_price', 'quantity',
                      'order__complete', 'order__customer__username']
 
-    # readonly_fields = ['transaction_id', 'product_title', 'product_cover', 'price', 'quantity', 'total', 'customer',
-    #                    'completed',
-    #                    'date_added', ]
+    exclude = ['product', 'order', 'quantity', ]
+
+    readonly_fields = ['transaction_id', 'product_title', 'product_cover', 'price', 'quantity', 'total', 'customer',
+                       'completed',
+                       'date_added', ]
 
     def product_title(self, obj):
         if obj.product:
@@ -194,25 +197,24 @@
             return mark_safe("$" + str(obj.product.price))
 
     def transaction_id(self, obj):
-        if obj.order:
+        if obj.order.customer:
             return mark_safe(obj.order.transaction_id)
-        else:
-            obj.delete()
 
     def customer(self, obj):
         if obj.order:
             return mark_safe(str(obj.order.customer))
+        else:
+            obj.delete()
 
     def total(self, obj):
         if obj:
             total = obj.get_total
-            return mark_safe(str(total))
+            return mark_safe("$" +str(total))
 
     def completed(self, obj):
         if obj.order:
             return mark_safe(obj.order.complete)
 
-
 admin.site.register(OrderItem, OrderItemAdmin)
 
 
@@ -220,6 +222,11 @@
     list_display = ['customer', 'transaction_Id', 'address', 'city', 'state', 'country', 'zipcode', 'date_added']
     search_fields = ['customer__username', 'order__transaction_id', 'address', 'city', 'state', 'country', 'zipcode',
                      'date_added']
+    list_per_page = 15
+
+    exclude = ['customer', 'city', 'address', 'state', 'zipcode', 'order', 'country']
+    #
+    readonly_fields = ['customer', 'transaction_Id', 'address', 'city', 'state', 'country', 'zipcode', 'date_added']
 
     def transaction_Id(self, obj):
         if obj.order:
